name: Deploy master branch to VPS

on:
  push:
    branches:
      - develop

jobs:
  dump:
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Backup DB
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CF_PROD_SERVER_IP }}
          port: ${{ secrets.CF_PROD_SERVER_PORT }}
          username: ${{ secrets.CF_PROD_SERVER_USER }}
          key: ${{ secrets.CF_PROD_SERVER_KEY }}
          script: |
            /usr/bin/pg_dump -Fc -v -Z6 -f /opt/crowdforce/dump/$(date +%Y-%m-%d-%H-%M).gz

      - name: Dump old app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CF_PROD_SERVER_IP }}
          port: ${{ secrets.CF_PROD_SERVER_PORT }}
          username: ${{ secrets.CF_PROD_SERVER_USER }}
          key: ${{ secrets.CF_PROD_SERVER_KEY }}
          script: |
            cp app/app.jar apps_archive/$(date +%Y-%m-%d-%H-%M).app.jar

  build_and_deploy:
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build project package
        run: mvn -B clean package --file pom.xml

#      - name: Verify artifacts
#        run: mvn -B clean verify --file pom.xml

      - name: Move JAR to TEMP dir
        run: mkdir artifacts && mv cf-app/target/*.jar artifacts/app.jar

      - name: List artifacts
        run: ls -laH artifacts

      - name: Push to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.CF_PROD_SERVER_IP }}
          port: ${{ secrets.CF_PROD_SERVER_PORT }}
          username: ${{ secrets.CF_PROD_SERVER_USER }}
          key: ${{ secrets.CF_PROD_SERVER_KEY }}
          source: "artifacts/app.jar"
          target: "/opt/crowdforce/"

      - name: Run app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CF_PROD_SERVER_IP }}
          port: ${{ secrets.CF_PROD_SERVER_PORT }}
          username: ${{ secrets.CF_PROD_SERVER_USER }}
          key: ${{ secrets.CF_PROD_SERVER_KEY }}
          script: |
            sudo systemctl restart crowdforce-app.service
            sudo systemctl status crowdforce-app.service

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cf-artifact
          path: artifacts/app.jar
