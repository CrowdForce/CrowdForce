/*
 * This file is generated by jOOQ.
 */
package space.crowdforce.model.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import space.crowdforce.model.Keys;
import space.crowdforce.model.Public;
import space.crowdforce.model.tables.records.TrackableItemParticipantsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackableItemParticipants extends TableImpl<TrackableItemParticipantsRecord> {

    private static final long serialVersionUID = 265835784;

    /**
     * The reference instance of <code>public.trackable_item_participants</code>
     */
    public static final TrackableItemParticipants TRACKABLE_ITEM_PARTICIPANTS = new TrackableItemParticipants();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrackableItemParticipantsRecord> getRecordType() {
        return TrackableItemParticipantsRecord.class;
    }

    /**
     * The column <code>public.trackable_item_participants.trackable_item_id</code>.
     */
    public final TableField<TrackableItemParticipantsRecord, Integer> TRACKABLE_ITEM_ID = createField(DSL.name("trackable_item_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.trackable_item_participants.user_id</code>.
     */
    public final TableField<TrackableItemParticipantsRecord, Integer> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.trackable_item_participants</code> table reference
     */
    public TrackableItemParticipants() {
        this(DSL.name("trackable_item_participants"), null);
    }

    /**
     * Create an aliased <code>public.trackable_item_participants</code> table reference
     */
    public TrackableItemParticipants(String alias) {
        this(DSL.name(alias), TRACKABLE_ITEM_PARTICIPANTS);
    }

    /**
     * Create an aliased <code>public.trackable_item_participants</code> table reference
     */
    public TrackableItemParticipants(Name alias) {
        this(alias, TRACKABLE_ITEM_PARTICIPANTS);
    }

    private TrackableItemParticipants(Name alias, Table<TrackableItemParticipantsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrackableItemParticipants(Name alias, Table<TrackableItemParticipantsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TrackableItemParticipants(Table<O> child, ForeignKey<O, TrackableItemParticipantsRecord> key) {
        super(child, key, TRACKABLE_ITEM_PARTICIPANTS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<UniqueKey<TrackableItemParticipantsRecord>> getKeys() {
        return Arrays.<UniqueKey<TrackableItemParticipantsRecord>>asList(Keys.TRACKABLE_ITEM_PARTICIPANTS_TRACKABLE_ITEM_ID_USER_ID_KEY);
    }

    @Override
    public List<ForeignKey<TrackableItemParticipantsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrackableItemParticipantsRecord, ?>>asList(Keys.TRACKABLE_ITEM_PARTICIPANTS__TRACKABLE_ITEM_PARTICIPANTS_TRACKABLE_ITEM_ID_FKEY, Keys.TRACKABLE_ITEM_PARTICIPANTS__TRACKABLE_ITEM_PARTICIPANTS_USER_ID_FKEY);
    }

    public TrackableItem trackableItem() {
        return new TrackableItem(this, Keys.TRACKABLE_ITEM_PARTICIPANTS__TRACKABLE_ITEM_PARTICIPANTS_TRACKABLE_ITEM_ID_FKEY);
    }

    public Users users() {
        return new Users(this, Keys.TRACKABLE_ITEM_PARTICIPANTS__TRACKABLE_ITEM_PARTICIPANTS_USER_ID_FKEY);
    }

    @Override
    public TrackableItemParticipants as(String alias) {
        return new TrackableItemParticipants(DSL.name(alias), this);
    }

    @Override
    public TrackableItemParticipants as(Name alias) {
        return new TrackableItemParticipants(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackableItemParticipants rename(String name) {
        return new TrackableItemParticipants(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackableItemParticipants rename(Name name) {
        return new TrackableItemParticipants(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
