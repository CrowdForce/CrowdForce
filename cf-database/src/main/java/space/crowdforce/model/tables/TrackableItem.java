/*
 * This file is generated by jOOQ.
 */
package space.crowdforce.model.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import space.crowdforce.model.Keys;
import space.crowdforce.model.Public;
import space.crowdforce.model.tables.records.TrackableItemRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackableItem extends TableImpl<TrackableItemRecord> {

    private static final long serialVersionUID = -764043214;

    /**
     * The reference instance of <code>public.trackable_item</code>
     */
    public static final TrackableItem TRACKABLE_ITEM = new TrackableItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrackableItemRecord> getRecordType() {
        return TrackableItemRecord.class;
    }

    /**
     * The column <code>public.trackable_item.id</code>.
     */
    public final TableField<TrackableItemRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('trackable_item_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.trackable_item.name</code>.
     */
    public final TableField<TrackableItemRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.trackable_item.activity_id</code>.
     */
    public final TableField<TrackableItemRecord, Integer> ACTIVITY_ID = createField(DSL.name("activity_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.trackable_item</code> table reference
     */
    public TrackableItem() {
        this(DSL.name("trackable_item"), null);
    }

    /**
     * Create an aliased <code>public.trackable_item</code> table reference
     */
    public TrackableItem(String alias) {
        this(DSL.name(alias), TRACKABLE_ITEM);
    }

    /**
     * Create an aliased <code>public.trackable_item</code> table reference
     */
    public TrackableItem(Name alias) {
        this(alias, TRACKABLE_ITEM);
    }

    private TrackableItem(Name alias, Table<TrackableItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrackableItem(Name alias, Table<TrackableItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TrackableItem(Table<O> child, ForeignKey<O, TrackableItemRecord> key) {
        super(child, key, TRACKABLE_ITEM);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<TrackableItemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRACKABLE_ITEM;
    }

    @Override
    public UniqueKey<TrackableItemRecord> getPrimaryKey() {
        return Keys.TRACKABLE_ITEM_PKEY;
    }

    @Override
    public List<UniqueKey<TrackableItemRecord>> getKeys() {
        return Arrays.<UniqueKey<TrackableItemRecord>>asList(Keys.TRACKABLE_ITEM_PKEY);
    }

    @Override
    public List<ForeignKey<TrackableItemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrackableItemRecord, ?>>asList(Keys.TRACKABLE_ITEM__TRACKABLE_ITEM_ACTIVITY_ID_FKEY);
    }

    public Activities activities() {
        return new Activities(this, Keys.TRACKABLE_ITEM__TRACKABLE_ITEM_ACTIVITY_ID_FKEY);
    }

    @Override
    public TrackableItem as(String alias) {
        return new TrackableItem(DSL.name(alias), this);
    }

    @Override
    public TrackableItem as(Name alias) {
        return new TrackableItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackableItem rename(String name) {
        return new TrackableItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackableItem rename(Name name) {
        return new TrackableItem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
