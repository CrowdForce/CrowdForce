/*
 * This file is generated by jOOQ.
 */
package space.crowdforce.model.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import space.crowdforce.model.Keys;
import space.crowdforce.model.Public;
import space.crowdforce.model.tables.records.TrackableItemEventRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackableItemEvent extends TableImpl<TrackableItemEventRecord> {

    private static final long serialVersionUID = -836486718;

    /**
     * The reference instance of <code>public.trackable_item_event</code>
     */
    public static final TrackableItemEvent TRACKABLE_ITEM_EVENT = new TrackableItemEvent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrackableItemEventRecord> getRecordType() {
        return TrackableItemEventRecord.class;
    }

    /**
     * The column <code>public.trackable_item_event.id</code>.
     */
    public final TableField<TrackableItemEventRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('trackable_item_event_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.trackable_item_event.message</code>.
     */
    public final TableField<TrackableItemEventRecord, String> MESSAGE = createField(DSL.name("message"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.trackable_item_event.trackable_item_id</code>.
     */
    public final TableField<TrackableItemEventRecord, Integer> TRACKABLE_ITEM_ID = createField(DSL.name("trackable_item_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.trackable_item_event.trackable_item_event_prototype_id</code>.
     */
    public final TableField<TrackableItemEventRecord, Integer> TRACKABLE_ITEM_EVENT_PROTOTYPE_ID = createField(DSL.name("trackable_item_event_prototype_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.trackable_item_event.event_time</code>.
     */
    public final TableField<TrackableItemEventRecord, LocalDateTime> EVENT_TIME = createField(DSL.name("event_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.trackable_item_event.participants_number</code>.
     */
    public final TableField<TrackableItemEventRecord, Integer> PARTICIPANTS_NUMBER = createField(DSL.name("participants_number"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.trackable_item_event</code> table reference
     */
    public TrackableItemEvent() {
        this(DSL.name("trackable_item_event"), null);
    }

    /**
     * Create an aliased <code>public.trackable_item_event</code> table reference
     */
    public TrackableItemEvent(String alias) {
        this(DSL.name(alias), TRACKABLE_ITEM_EVENT);
    }

    /**
     * Create an aliased <code>public.trackable_item_event</code> table reference
     */
    public TrackableItemEvent(Name alias) {
        this(alias, TRACKABLE_ITEM_EVENT);
    }

    private TrackableItemEvent(Name alias, Table<TrackableItemEventRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrackableItemEvent(Name alias, Table<TrackableItemEventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TrackableItemEvent(Table<O> child, ForeignKey<O, TrackableItemEventRecord> key) {
        super(child, key, TRACKABLE_ITEM_EVENT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<TrackableItemEventRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRACKABLE_ITEM_EVENT;
    }

    @Override
    public UniqueKey<TrackableItemEventRecord> getPrimaryKey() {
        return Keys.TRACKABLE_ITEM_EVENT_PKEY;
    }

    @Override
    public List<UniqueKey<TrackableItemEventRecord>> getKeys() {
        return Arrays.<UniqueKey<TrackableItemEventRecord>>asList(Keys.TRACKABLE_ITEM_EVENT_PKEY);
    }

    @Override
    public List<ForeignKey<TrackableItemEventRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrackableItemEventRecord, ?>>asList(Keys.TRACKABLE_ITEM_EVENT__TRACKABLE_ITEM_EVENT_TRACKABLE_ITEM_ID_FKEY, Keys.TRACKABLE_ITEM_EVENT__TRACKABLE_ITEM_EVENT_TRACKABLE_ITEM_EVENT_PROTOTYPE_ID_FKEY);
    }

    public TrackableItem trackableItem() {
        return new TrackableItem(this, Keys.TRACKABLE_ITEM_EVENT__TRACKABLE_ITEM_EVENT_TRACKABLE_ITEM_ID_FKEY);
    }

    public TrackableItemEventPrototype trackableItemEventPrototype() {
        return new TrackableItemEventPrototype(this, Keys.TRACKABLE_ITEM_EVENT__TRACKABLE_ITEM_EVENT_TRACKABLE_ITEM_EVENT_PROTOTYPE_ID_FKEY);
    }

    @Override
    public TrackableItemEvent as(String alias) {
        return new TrackableItemEvent(DSL.name(alias), this);
    }

    @Override
    public TrackableItemEvent as(Name alias) {
        return new TrackableItemEvent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackableItemEvent rename(String name) {
        return new TrackableItemEvent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrackableItemEvent rename(Name name) {
        return new TrackableItemEvent(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, Integer, LocalDateTime, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
